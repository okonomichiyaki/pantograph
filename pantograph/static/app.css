h2 {
    --font-size:0.75rem;
}

/* used to extract cropped search target: */
canvas#crop {
    width: 300px;
    height: 300px;
}

/* debugging display tools visible if debug mode on: */
#debug {
    display: none;
}
.debug #debug {
    display: block;
}
#debug h2 {
    --typography-spacing-vertical: .5rem;
}
#debug pre {
    --typography-spacing-vertical: 0;
    margin: 0;
}
#debug canvas, #debug img {
    border: dashed coral;
}

/* Placeholders and status changes */
#unknown-card {
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 200px;
    font-weight: bold;
    width: 215px;
    height: 300px;
}

/* hide some things (eg camera controls) from spectator
   needs to be more specific than player rules below */
.spectator li.spectator-hide {
    display: none;
}

/* hide camera controls while waiting. show when ready */
.waiting .ready-visible {
    display: none;
}
.connecting .ready-visible {
    display: none;
}
.ready .ready-visible {
    display: block;
}

/* hide camera controls after local video playing (TODO: switch to "stop" controls) */
.local-playing .local-playing-hide {
    /* display: none; */
}

/* hide some controls until both playing */
body.local-playing.remote-playing .both-playing-visible {
    /* display: block; */
}
.both-playing-visible {
    /* display: none; */
}

/* ??? */
.connecting-visible {
    display: none;
}
.connecting .connecting-visible {
    display: block;
}
.connecting .connecting-invisible {
    display: none;
}

/* if nocamera error occurs, hide other statuses (this takes precedence) */
.nocamera .status > :not(#metered) {
    display: none;
}

/* when local/remote video is playing, hide matching placeholder and reveal video */
.remote-playing #remote-placeholder {
    display: none;
}
.remote-playing #remote-video {
    display: block;
}
.local-playing #local-placeholder {
    display: none;
}
.local-playing #local-video {
    display: block;
}

/* makes shrink work as expected https://stackoverflow.com/a/63557515/352061 */
* {
    min-width: 0;
    min-height: 0;
}

/* General styles for app begin here */

html, body, .container-fluid {
    height: 100%;
    margin: 0;
}

/* Prevents vertical scroll to feel more like a single page app.
   hides the debugging view, so disable if class present: */
html:not(.debug), body:not(.debug), .container-fluid:not(.debug) {
    overflow: hidden
}

.main {
    height: 90%;
    width: 100%;
    /* main content has left (remote video) and right (local video, card display) panels in a flex row container */
    display: flex;
    flex-direction: row;
    align-items: center;
}
.main div {
    padding: 5px;
}
/* left panel gets a flex value >1 to take up remaining space after right panel */
.left-panel {
    flex: 2 1 auto;
    height: 100%;
    display: flex;
    flex-direction: column;
}
.style-debug .left-panel {
    background-color: yellowgreen;
}
#primary-container {
    flex-grow: 2;
}

.right-panel {
    /* maximize height, but constrain width and shrink (allows left panel to use more space) */
    height: 100%;
    min-width: 360px; /* TODO: could this be a percentage? */
    width: 360px;
    flex-shrink: 2;

    /* internally, right panel is a column flex container for local video plus card display */
    display: flex;
    flex-direction: column;


    /* default of align-items is stretch
       changed to center horiz in panel, and maintains aspect ratio of card images
       (https://stackoverflow.com/a/44030846/352061) */
    align-items: center;
}
.style-debug .right-panel {
    background-color: steelblue;
}
#secondary-container {
    width: 100%;
    padding: 0;
}
#secondary-container .video {
    width: 100%;
    flex-shrink: 2;
    align-items: center;
    justify-content: center;
}
div.placeholder {
    display: flex;
    font-size: 100px;
    background-color: grey;
    height: 100%;
    width: 100%;
}

.card {
    margin-top: 10px;
    border-radius: 4%/3%;
    flex-shrink: 2;
}
.focus .card {
    margin-top: 0;
}

/* align status sub-components vertically */
.status {
    /* override to add spacing in status spinner when in nav */
    --spacing: 1rem;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
}

/* following rules line up transparent calibration canvas on top of video */
#calibration-canvas {
    display: none;
    position: absolute;
    z-index: 20;
    height: 100%;
    left: 0;
    top: 0;
}
#primary-container {
    position: relative;
    margin: 0 auto;
    display: inline-block;
    left: 0;
    top: 0;
    width: 100%;
}
#primary-container .video {
    max-width: 100%;
    /* height: 100%; */
    position: absolute;
    z-index: 1;
    left: 0;
    top: 0;
    align-items: center;
    justify-content: center;
}

/* focus mode brings primary video to take up whole view, also blurs rest of page */
.focus #primary-container .video {
    height: 100vh;
    width: 100vw;
    position: fixed;
    z-index: 100;
    left: 0;
    top: 0;
    backdrop-filter: blur(0.25rem);
}

/* responsive styles */
@media (orientation: portrait) {
    div.main {
        flex-direction: column;
        justify-content: space-evenly;
        flex-basis: 0;
    }
    div.main div {
        padding: 0;
    }
    div.left-panel nav {
        display: none;
    }
    div.left-panel {
        width: 100%;
        flex-grow: 0;
    }
    div.right-panel {
        width: 100%;
    }
    #primary-container {
        position: static;
        width: 100%;
        height: 100%;
        flex-grow: 0;
    }
    #primary-container .video {
        position: static;
    }

    #card-container {
        width:100%;
        position:relative;
    }
    html,body,#card-container {
        height:100%;
    }
    #card-container > img {
        width:100%;
        max-width: 300px;
        position:absolute;
        top:0; left:0; right:0; bottom:0;
        margin:auto;
    }

    html:not(.debug), body:not(.debug), .container-fluid:not(.debug) {
        overflow: visible;
    }
}
